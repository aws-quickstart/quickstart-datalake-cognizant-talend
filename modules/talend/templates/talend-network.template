{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Parameters": {
		"TalendVpcCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Description": "CIDR block for the VPC",
            "Type": "String",
            "Default": "10.0.0.0/16"
        },
		"TalendPublicSubnetCIDR": {
			"Type": "String",
            "Description": "CIDR block for the public subnet",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.128.0/20"
		},
		"PrivateSubnet1CIDR": {
			"Type": "String",
            "Description": "CIDR block for the private subnet",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.0.0/19"
		},
        "PrivateSubnet2CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.32.0/19",
            "Description": "CIDR block for private subnet 2 located in Availability Zone 2",
            "Type": "String"
        },
        "AvailabilityZones": {
            "Description": "List of Availability Zones to use for the subnets in the VPC. Note: The logical order is preserved.",
            "Type": "List<AWS::EC2::AvailabilityZone::Name>"
        }
    },
    "Mappings": {
	},
    "Resources": {
        "TalendVPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "EnableDnsSupport": "true",
                "EnableDnsHostnames": "true",
                "CidrBlock": { "Ref": "TalendVpcCIDR" }
            }
        },
        "TalendInternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {}
        },
        "VPCGatewayAttachment": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "InternetGatewayId": {
                    "Ref": "TalendInternetGateway"
                },
                "VpcId": {
                    "Ref": "TalendVPC"
                }
            }
        },
        "TalendPublicSubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": { "Ref": "TalendVPC" },
                "MapPublicIpOnLaunch": true,
                "CidrBlock": { "Ref": "TalendPublicSubnetCIDR" },
                "AvailabilityZone": {
                    "Fn::Select": [ "0", { "Ref": "AvailabilityZones" } ]
                }
            }
        },
        "PublicRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": { "Ref": "TalendVPC" }
            }
        },
        "PublicRoute": {
            "Type": "AWS::EC2::Route",
            "DependsOn": [
                "TalendInternetGateway"
            ],
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "GatewayId": {
                    "Ref": "TalendInternetGateway"
                }
            }
        },
        "PublicSubnetRouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": { "Ref": "PublicRouteTable" },
                "SubnetId": { "Ref": "TalendPublicSubnet" }
            }
        },
        "TalendNatGatewayEip": {
            "Type" : "AWS::EC2::EIP",
            "DependsOn": [ "VPCGatewayAttachment" ],
            "Properties" : {
              "Domain" : "vpc"
            }
        },
        "TalendNatGateway": {
            "Type": "AWS::EC2::NatGateway",
            "DependsOn": [ "VPCGatewayAttachment" ],
            "Properties": {
				"SubnetId": { "Ref": "TalendPublicSubnet"},
				"AllocationId": { "Fn::GetAtt": [ "TalendNatGatewayEip", "AllocationId" ] }
			}
        },
        "PrivateSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": { "Ref": "TalendVPC" },
                "CidrBlock": { "Ref": "PrivateSubnet1CIDR" },
                "AvailabilityZone": {
                    "Fn::Select": [ "0", { "Ref": "AvailabilityZones" } ]
                }
            }
        },
        "PrivateRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "TalendVPC"
                }
            }
        },
        "PrivateRoute": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "NatGatewayId": {
                    "Ref": "TalendNatGateway"
                }
            }
        },
        "PrivateSubnetRouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                },
                "SubnetId": {
                    "Ref": "PrivateSubnet1"
                }
            }
        },
        "PrivateSubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": { "Ref": "TalendVPC" },
                "CidrBlock": { "Ref": "PrivateSubnet2CIDR" },
                "AvailabilityZone": {
                    "Fn::Select": [ "1", { "Ref": "AvailabilityZones" } ]
                }
            }
        },
        "PrivateSubnetNetworkAcl": {
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "VpcId": {
                    "Ref": "TalendVPC"
                }
            }
        },
        "PrivateSubnetNetworkAclEntryInbound": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "CidrBlock": "0.0.0.0/0",
                "Egress": "false",
                "NetworkAclId": {
                    "Ref": "PrivateSubnetNetworkAcl"
                },
                "Protocol": "-1",
                "RuleAction": "allow",
                "RuleNumber": "100"
            }
        },
        "PrivateSubnetNetworkAclEntryOutbound": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "CidrBlock": "0.0.0.0/0",
                "Egress": "true",
                "NetworkAclId": {
                    "Ref": "PrivateSubnetNetworkAcl"
                },
                "Protocol": "-1",
                "RuleAction": "allow",
                "RuleNumber": "100"
            }
        },
        "PrivateSubnetNetworkAclAssociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PrivateSubnet1"
                },
                "NetworkAclId": {
                    "Ref": "PrivateSubnetNetworkAcl"
                }
            }
        }
    },
    "Outputs": {
        "TalendVpc": {
            "Value": {
                "Ref": "TalendVPC"
            },
            "Description": "VPC for Talend deployment",
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}:vpc"
                }
            }
        },
        "PublicSubnet": {
            "Value": {
                "Ref": "TalendPublicSubnet"
            },
            "Description": "Subnet on  which the TAC resides",
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}:publicSubnet"
                }
            }
        },
        "PrivateSubnet1": {
            "Value": {
                "Ref": "PrivateSubnet1"
            },
            "Description": "Subnet on  which the Jobservers reside",
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}:privateSubnet1"
                }
            }
        },
        "PrivateSubnet2": {
            "Value": {
                "Ref": "PrivateSubnet2"
            },
            "Description": "Subnet for RDS replication, not used by default.",
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}:privateSubnet2"
                }
            }
        }
    }
}